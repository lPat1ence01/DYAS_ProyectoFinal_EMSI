@model EMSI_Corporation.ViewModels.ServicioMantenimientoVM;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var extintor = ViewBag.extintor as EMSI_Corporation.Models.Extintor;//Se supone que quite esto para acceder desde el sidebar
    var mantenimientos = ViewBag.mantenimientos as List<EMSI_Corporation.Models.Mantenimiento>;
    var cliente_trabajador = ViewBag.cliente_trabajador as EMSI_Corporation.ViewModels.ClienteTrabajadorVM;

}

<main>
    <form method="get" action="/Acceso/DescargarExcel">
        <button type="submit" class="btn btn-primary">Descargar Excel</button>
    </form>
    <form asp-controller="Mantenimiento" asp-action="Registrar" method="post" class="mantenimiento">
        <div class="seccion sec-mant-servicio">
            <h1 class="titulo">Servicio</h1>
            <div class="form-line">
                <span>Cliente:</span>
                <span>@cliente_trabajador.cliente.NomCliente</span>
            </div>
            <div class="form-line">
                <span>Fecha:</span>
                <input type="date" class="field">
            </div>
            <div class="form-line">
                <span>Precio unitario:</span>
                <input asp-for="PrecioUnitario" type="text" class="field">
            </div>
            <div class="form-line">
                <span>Hora inicio:</span>
                <input type="time" class="field">
            </div>
            <div class="form-line">
                <span>Hora fin:</span>
                <input type="time" class="field">
            </div>
            <h3 class="titulo">Productos</h3>
            <a type="button" class="btn btn-1" asp-controller="Mantenimiento" asp-action="RegistrarEstadoExtintor" asp-route-id=@extintor.IdExtintor>
                Agregar producto
            </a>


            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Empleado a cargo</th>
                        <th scope="col">ID Extintor</th>
                        <th scope="col">Ha sido usado?</th>
                        <th scope="col">Está visible?</th>
                        <th scope="col">% de validez</th>
                        <th scope="col">Acciones</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var mant in mantenimientos)
                    {
                        var suma = (mant.AperturaCorrecta ? 1 : 0) + (mant.BarometroCorrecto ? 1 : 0) + (mant.Señalización ? 1 : 0) + (mant.InstruccionesVisibles ? 1 : 0) + (mant.BoquillaCorrecta ? 1 : 0) + (mant.EstadoIndicador ? 1 : 0) + (mant.EstadoPrecinto ? 1 : 0) + (mant.ExteriorCorrecto ? 1 : 0) + (mant.LugarAdecuado ? 1 : 0) + (mant.MangueraCorrecta ? 1 : 0) + (mant.PesoCorrecto ? 1 : 0) + (mant.PresionCorrecta ? 1 : 0);
                        double per = (double)suma * 100 / 12.00;
                        per = Math.Round(per, 2);
                        <tr>
                            <th scope="row">@mant.IdMantenimiento</th>
                            <td>@mant.Empleado.nomEmpleado</td>
                            <td>@mant.Extintor_ID</td>
                            <td>@mant.Usado</td>
                            <td>@mant.Visible</td>
                            <td>@per</td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="seccion sec-mant-observaciones">
            <h1 class="titulo">OBSERVACIONES</h1>
            <div class="form-line">
                <textarea name="" id="" cols="30" rows="10" class="field w-100"></textarea>
            </div>

            <h1 class="titulo">FIRMA</h1>
            <p>Firma cliente</p>
            <canvas id="myCanvas" width="200" height="100" style="border:1px solid black;"></canvas>
            <div class="canvas-btns">
                <button id="canvas-clear" class="">del</button>
                <button id="canvas-save" class="">save</button>
            </div>

            <button type="submit" class="btn-1">Añadir</button>
        </div>
        <div class="seccion sec-mant-excel">
            <h1 class="titulo">EXCEL</h1>
        </div>
    </form>
</main>

<script>
    const canvas = document.getElementById("myCanvas");
    const canvas_clear_btn = document.getElementById("canvas-clear");
    const canvas_save_btn = document.getElementById("canvas-save");
    const ctx = canvas.getContext("2d");
    ctx.lineWidth = 3;
    ctx.lineCap = 'round';
    ctx.strokeStyle = 'black';
    let isDrawing = false;

    function startPosition(e) {
        console.log("first")
        isDrawing = true;
        ctx.beginPath();
    }
    function endPosition(e) {
        isDrawing = false;
    }

    const drawing = (e) => {
        if (!isDrawing) return;
        ctx.lineTo(e.offsetX, e.offsetY);
        ctx.stroke();
    }

    const clear = () => {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    }
    const fillBG = () => {
        ctx.fillStyle = "#fff";
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = "#000";
    }
    //tutorial imgs:
    //https://www.youtube.com/watch?v=HEWxvpHVwKw
    const saveIMG = () => {
        const link = document.createElement("a")
        link.download = "firma.jpg";
        link.href = canvas.toDataURL();
        link.click();
    }

    window.addEventListener("load", () => {
        canvas.height = canvas.offsetHeight;
        canvas.width = canvas.offsetWidth;
        fillBG();
    })
    canvas.addEventListener("mousedown", startPosition);
    canvas.addEventListener("mouseup", endPosition);
    canvas.addEventListener("mousemove", drawing);

    canvas_clear_btn.addEventListener("click", fillBG);
    canvas_save_btn.addEventListener("click", saveIMG);

    const addProdBTN = document.querySelector("#add-prod-btn");

    const addProd = () => {

    }

    addProdBTN.addEventListener("click", addProd)

    const excelBTN = document.querySelector("#boton-excel");
    excelBTN.addEventListener("click", () => {
        fetch("@Url.Action("DownExcel")", {
            method: "GET",
            responseType: 'blob'
        }).then(data => {
            console.log(data);
            saveExcel(data)
        })
    })

    const saveExcel = (response) => {
        var headers = response.headers;
        var blob = new Blob([response.data],
            { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },
        );

        window.open(window.URL.createObjectURL(blob));
    }

    /*
        canvas.width = 200;
        canvas.height = 100;

        function startPosition(e) {
          console.log("first")
          isDrawing = true;
          draw(e);
        }

        //end drawing
        function endPosition() {
          console.log("end")

          isDrawing = false;
          ctx.beginPath();
        }

        //Function to draw on the Canvas
        function draw(e) {
          if (!isDrawing) return;
            //Select the brush size
          ctx.lineTo(
            e.clientX - canvas.offsetLeft,
            e.clientY - canvas.offsetTop
          );
          ctx.stroke();
          ctx.beginPath();
          ctx.moveTo(
            e.clientX - canvas.offsetLeft,
            e.clientY - canvas.offsetTop
          );
        }

        //event listener for differnt mouse actions
        canvas
          .addEventListener('mousedown', startPosition);
        canvas
          .addEventListener('mouseup', endPosition);
        canvas
          .addEventListener('mousemove', draw);
        */


</script>