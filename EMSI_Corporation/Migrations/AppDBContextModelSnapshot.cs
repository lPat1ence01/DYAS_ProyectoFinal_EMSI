// <auto-generated />
using EMSI_Corporation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMSI_Corporation.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMSI_Corporation.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<string>("RUC")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumCelular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdPersona");

                    b.ToTable("Persona", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Trabajador", b =>
                {
                    b.Property<int>("IdTrabajador")
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdTrabajador");

                    b.ToTable("Trabajador", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrabajadorID")
                        .HasColumnType("int");

                    b.Property<int?>("TrabajadorIdTrabajador")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("TrabajadorID");

                    b.HasIndex("TrabajadorIdTrabajador")
                        .IsUnique()
                        .HasFilter("[TrabajadorIdTrabajador] IS NOT NULL");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Cliente", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Persona", "persona")
                        .WithOne("Cliente")
                        .HasForeignKey("EMSI_Corporation.Models.Cliente", "IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Trabajador", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Persona", "Persona")
                        .WithOne("Trabajador")
                        .HasForeignKey("EMSI_Corporation.Models.Trabajador", "IdTrabajador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Usuario", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Trabajador", null)
                        .WithOne("Usuario")
                        .HasForeignKey("EMSI_Corporation.Models.Usuario", "TrabajadorIdTrabajador");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Persona", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("Trabajador")
                        .IsRequired();
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Trabajador", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
