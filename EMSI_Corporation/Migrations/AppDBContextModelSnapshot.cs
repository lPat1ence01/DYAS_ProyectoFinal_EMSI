// <auto-generated />
using System;
using EMSI_Corporation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMSI_Corporation.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMSI_Corporation.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumCelular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NumDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Comprobante", b =>
                {
                    b.Property<int>("IdComprobante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComprobante"));

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("NroComprobante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoComprobante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Venta_ID")
                        .HasColumnType("int");

                    b.HasKey("IdComprobante");

                    b.HasIndex("Venta_ID");

                    b.ToTable("Comprobantes");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.ComprobanteServicio", b =>
                {
                    b.Property<int>("IdComprobante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComprobante"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdComprobante");

                    b.ToTable("ComprobantesServicio");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("apeEmpleado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("gmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nomEmpleado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("numCelular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Extintor", b =>
                {
                    b.Property<int>("IdExtintor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExtintor"));

                    b.Property<decimal>("CapacidadKG")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ClaseFuego")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoAgente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Venta_ID")
                        .HasColumnType("int");

                    b.HasKey("IdExtintor");

                    b.HasIndex("Venta_ID");

                    b.ToTable("Extintores");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.InformeTecnico", b =>
                {
                    b.Property<int>("IdInforme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInforme"));

                    b.Property<DateTime>("FechaInforme")
                        .HasColumnType("datetime2");

                    b.Property<string>("Informe_PDF")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Visita_ID")
                        .HasColumnType("int");

                    b.HasKey("IdInforme");

                    b.HasIndex("Visita_ID");

                    b.ToTable("InformesTecnicos");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Mantenimiento", b =>
                {
                    b.Property<int>("IdMantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMantenimiento"));

                    b.Property<bool>("AperturaCorrecta")
                        .HasColumnType("bit");

                    b.Property<bool>("BarometroCorrecto")
                        .HasColumnType("bit");

                    b.Property<bool>("BoquillaCorrecta")
                        .HasColumnType("bit");

                    b.Property<int>("Empleado_ID")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoIndicador")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoPrecinto")
                        .HasColumnType("bit");

                    b.Property<bool>("ExteriorCorrecto")
                        .HasColumnType("bit");

                    b.Property<int>("Extintor_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InstruccionesVisibles")
                        .HasColumnType("bit");

                    b.Property<bool>("LugarAdecuado")
                        .HasColumnType("bit");

                    b.Property<bool>("MangueraCorrecta")
                        .HasColumnType("bit");

                    b.Property<bool>("PesoCorrecto")
                        .HasColumnType("bit");

                    b.Property<bool>("PresionCorrecta")
                        .HasColumnType("bit");

                    b.Property<bool>("Señalización")
                        .HasColumnType("bit");

                    b.Property<bool>("Usado")
                        .HasColumnType("bit");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("IdMantenimiento");

                    b.HasIndex("Empleado_ID");

                    b.HasIndex("Extintor_ID");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("nomMenu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMenu");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Recarga", b =>
                {
                    b.Property<int>("IdRecarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecarga"));

                    b.Property<decimal>("CantidadKG")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Empleado_ID")
                        .HasColumnType("int");

                    b.Property<int>("Extintor_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRecarga")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialUsado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PresionPostRecarga")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("IdRecarga");

                    b.HasIndex("Empleado_ID");

                    b.HasIndex("Extintor_ID");

                    b.ToTable("Recargas");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.ReporteServicio", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<int>("Cliente_ID")
                        .HasColumnType("int");

                    b.Property<int>("Comprobante_ID")
                        .HasColumnType("int");

                    b.Property<byte[]>("FirmaCliente")
                        .IsRequired()
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<byte[]>("ImgEvidencia")
                        .IsRequired()
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<int>("Mantenimiento_ID")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Recarga_ID")
                        .HasColumnType("int");

                    b.HasKey("IdReporte");

                    b.HasIndex("Cliente_ID");

                    b.HasIndex("Comprobante_ID");

                    b.HasIndex("Mantenimiento_ID");

                    b.HasIndex("Recarga_ID");

                    b.ToTable("ReportesServicio");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("nomRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Rol_Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdMenu", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("Rol_Menu", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.User_Rol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("User_Rol", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEmpleado")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<int>("Cliente_ID")
                        .HasColumnType("int");

                    b.Property<int>("Empleado_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdVenta");

                    b.HasIndex("Cliente_ID");

                    b.HasIndex("Empleado_ID");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.VisitaTecnica", b =>
                {
                    b.Property<int>("IdVisita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVisita"));

                    b.Property<int>("Cliente_ID")
                        .HasColumnType("int");

                    b.Property<int>("Empleado_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVisita");

                    b.HasIndex("Cliente_ID");

                    b.HasIndex("Empleado_ID");

                    b.ToTable("VisitasTecnicas");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Comprobante", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("Venta_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Extintor", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("Venta_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.InformeTecnico", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.VisitaTecnica", "VisitaTecnica")
                        .WithMany()
                        .HasForeignKey("Visita_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VisitaTecnica");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Mantenimiento", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("Empleado_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Extintor", "Extintor")
                        .WithMany()
                        .HasForeignKey("Extintor_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Extintor");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Recarga", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("Empleado_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Extintor", "Extintor")
                        .WithMany()
                        .HasForeignKey("Extintor_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Extintor");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.ReporteServicio", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cliente_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.ComprobanteServicio", "ComprobanteServicio")
                        .WithMany()
                        .HasForeignKey("Comprobante_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Mantenimiento", "Mantenimiento")
                        .WithMany()
                        .HasForeignKey("Mantenimiento_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Recarga", "Recarga")
                        .WithMany()
                        .HasForeignKey("Recarga_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ComprobanteServicio");

                    b.Navigation("Mantenimiento");

                    b.Navigation("Recarga");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Rol_Menu", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Menu", "Menu")
                        .WithMany("RolMenus")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Rol", "Rol")
                        .WithMany("RolMenus")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.User_Rol", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Rol", "Rol")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Usuario", "Usuario")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Usuario", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Empleado", "empleado")
                        .WithOne("usuario")
                        .HasForeignKey("EMSI_Corporation.Models.Usuario", "IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empleado");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Venta", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cliente_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("Empleado_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.VisitaTecnica", b =>
                {
                    b.HasOne("EMSI_Corporation.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cliente_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EMSI_Corporation.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("Empleado_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Empleado", b =>
                {
                    b.Navigation("usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Menu", b =>
                {
                    b.Navigation("RolMenus");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Rol", b =>
                {
                    b.Navigation("RolMenus");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EMSI_Corporation.Models.Usuario", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
